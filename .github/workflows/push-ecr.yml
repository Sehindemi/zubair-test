name: docker build to ECR
on: 
  workflow_dispatch:
# permissions:
#       security-events: write 
jobs:
  AWS-Login:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: charlie-ecr
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEYS }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      # - name: Login to ECR
      #   id: ECR-login
      #   uses: aws-actions/amazon-ecr-login@v2

      - name: Login to AWS ECR
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ secrets.REGISTRY_NAME }}
          username: ${{ secrets.ACCESS_KEYS }}
          password: ${{ secrets.SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ secrets.REGION }}


      - name: build and push image
        run: |
          docker build -t charlie-ecr  ./app
          docker tag charlie-ecr:latest ${{ secrets.REGISTRY_NAME}}/charlie-ecr:latest 
          docker push ${{secrets.REGISTRY_NAME }}/charlie-ecr:latest

          
      # - name: trivy image scan 
      #   uses: aquasecurity/trivy-action@0.30.0
      #   with:
      #     image-ref: '${{ secrets.REGISTRY_NAME }}/charlie-ecr:latest'
      #     scan-type: 'image'
      #     format: 'sarif'
      #     output: 'trivy-scan-result.sarif'
      #     exit-code: 0
      #     severity: 'HIGH,CRITICAL'
      #   # continue-on-error: true
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEYS }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      # - name: upload scan result to GitHub Security
      #   uses: github/codeql-action/upload-sarif@v3
      #   with: 
      #     sarif_file: 'trivy-scan-result.sarif'
      #     wait-for-processing: true 
      #     category: 'image'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN }}  

      - name: trivy image scan 
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: '${{ secrets.REGISTRY_NAME }}/charlie-ecr:latest'
          scan-type: 'image'
          format: 'json'
          output: 'trivy-result.json'
          exit-code: 0
          severity: 'HIGH,CRITICAL'
        # continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEYS }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: upload scan result t
        uses: actions/upload-artifact@v4
        with: 
          name: trivy-scan-report
          path: trivy-result.json